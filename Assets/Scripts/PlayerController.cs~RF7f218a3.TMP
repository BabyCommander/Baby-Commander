using UnityEngine;
using System.Collections;


public class Weapon
{
    public GameObject weapon;
    public int ammo = 0;
    public float fireRate = 1;

    void shoot()
    {
        if (ammo > 0)
            ammo--;
    }

}


public class PlayerController : MonoBehaviour
{

    public float speed;

    public GameObject WeaponSpawn;
    public GameObject helmetSpawn;
    public GameObject gun;
    public Weapon weapon;
    public GameObject WaterShot;
    public GameObject helmet;

    public Sprite helmetSprite;
    public Sprite WeaponSprite;

    private bool facingRight = true;
    
    
    private Animator anim;

    private float nextJump;

    private GameObject gun2;

    private SpriteRenderer[] bag;
    private bool hasWeapon;
    private bool hashelmet;

    // Use this for initialization
    void Start()
    {
        bag = new SpriteRenderer[2];
        hasWeapon = false;
        hashelmet = false;
        weapon = new Weapon();
        anim = GetComponent<Animator>();
    }

    // Update is called once per frame
    void Update()
    {

        Vector2 movement = new Vector2(Input.GetAxis("Horizontal") * -1 * speed, 0f);


        if (Time.time >= nextJump + 0.75)
        {
            this.transform.Translate(new Vector2(0f, Input.GetAxis("Vertical") * 2));
            nextJump = Time.time;
        }

        if (Input.GetMouseButtonDown(0))
        {
            //if (weapon.weapon != null)
            //{
            //    if (this.weapon.weapon != null & WeaponSpawn != null)
            //    {
            //        if (weapon.ammo != 0)
            //        {
            //            Instantiate(this.WaterShot, WeaponSpawn.transform.position, WeaponSpawn.transform.rotation);
            //            this.weapon.ammo--;
            //        }

            //    }
            //}

            if(hasWeapon)
            {
                if(weapon.ammo != 0)
                {
                    Instantiate(this.WaterShot, WeaponSpawn.transform.position, WeaponSpawn.transform.rotation);
                    this.weapon.ammo--;
                }

            }
            
        }


        float move = Mathf.Abs(Input.GetAxis("Horizontal")),
            moveX = Input.GetAxis("Horizontal");

        if (moveX > 0 && !facingRight)
        {
         //   Flip();

            //if (weapon != null)
            //    if (weapon.weapon != null)
            //        weapon.weapon.transform.Translate(new Vector2(movement.x + 8 * 20, movement.y));
        }
        else if (moveX < 0 && facingRight)
        {
        //    Flip();

            //if (weapon != null)
            //    if (weapon.weapon != null)
            //        weapon.weapon.transform.Translate(new Vector2(movement.x - 8 * 20, movement.y));
        }


        
        this.transform.Translate(movement);
    }


    void FixedUpdate()
    {
        float move = Mathf.Abs(Input.GetAxis("Horizontal")),
            moveX = Input.GetAxis("Horizontal");

        anim.SetFloat("speed", move);

        anim.SetBool("haveItem", false);


        if (weapon.ammo == 0)
        {
            anim.SetBool("haveItem", false);
        }
        else
        {
            anim.SetBool("haveItem", true);
        }

        if (moveX > 0 && !facingRight)
        {
          //  Flip();
        }
        else if (moveX < 0 && facingRight)
        {
         //   Flip();
        }


        //if (weapon != null)
        //    if (weapon.weapon != null)
        //    {
        //        weapon.weapon.transform.position = WeaponSpawn.transform.position;
        //    }



    }

    void Flip()
    {
        facingRight = !facingRight;
        Vector2 theScale = transform.localScale;
        theScale.x *= -1;
        transform.localScale = theScale;
        //theScale = //weapon.weapon.transform.localScale;
        //theScale.x *= -1;
        // theScale.y *= -1;
        // weapon.weapon.transform.localScale = theScale;

    }


    public void setWeapon(string Bez)
    {
        if (Bez == "Watergun")
        {
            Destroy(weapon.weapon);

            if(bag != null)
                bag = this.gameObject.GetComponentsInChildren<SpriteRenderer>();

            for (int i = 0; i < 2; i++)
            {
                Debug.Log(bag[i].gameObject.tag);
                if (((SpriteRenderer)bag[i]).tag == "WeaponSpawn")
                {
                    Debug.Log(bag[i].gameObject.tag);

                    bag[i].GetComponent<SpriteRenderer>().sprite = WeaponSprite;
                    hasWeapon = true;
                }
            }





            //weapon.weapon = (GameObject)Instantiate(gun, WeaponSpawn.transform.position, WeaponSpawn.transform.rotation);
            //weapon.weapon.transform.localScale = new Vector3(0.4f, 0.4f, 0.4f);


            //if (facingRight)
            //{
            //    Vector2 theScale;
            //    theScale = weapon.weapon.transform.localScale;
            //    theScale.x *= -1;
            //    weapon.weapon.transform.localScale = theScale;
            //}

            //gun.transform.localScale = new Vector3(0.5f, 0.5f, 0.5f);
            weapon.ammo = 5;
        }
    }

    public void OnCollisionEnter2D(Collision2D coll)
    {
        if(coll.gameObject.tag == "Present")
        {
            Instantiate(helmet,coll.transform.position, coll.transform.rotation);
            Destroy(coll.gameObject);
        }

        if (coll.gameObject.tag == "Helmet")
        {
            Destroy(coll.gameObject);

            if (bag != null)
                bag = this.gameObject.GetComponentsInChildren<SpriteRenderer>();

            for (int i = 0; i < 2;i++ )
            {
                Debug.Log(bag[i].gameObject.tag);
                if (((SpriteRenderer)bag[i]).tag == "HelmetSpawn")
                {
                    Debug.Log(bag[i].gameObject.tag);
                    bag[i].GetComponent<SpriteRenderer>().sprite = helmetSprite;
                }
            }
        }

    }

}
